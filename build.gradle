import static java.lang.System.*

group 'com'
version '1.0-SNAPSHOT'

//sourceCompatibility = 1.8

apply plugin:   'java'
apply plugin:   'idea'
apply plugin:   'eclipse'
apply plugin:   'net.serenity-bdd.aggregator'
apply plugin:   'maven'

repositories {
    maven {
        url "https://repo.maven.apache.org/maven2/"
    }
}


buildscript {
    dependencies{
        classpath "net.serenity-bdd:serenity-gradle-plugin:2.0.2","org.apache.maven.plugins:maven-failsafe-plugin:2.22.1","com.github.temyers:cucumber-jvm-parallel-plugin:4.2.0"
    }
    repositories {
        maven {
            url "https://repo.maven.apache.org/maven2/"
        }
    }
}
dependencies{
    compile(
            "net.serenity-bdd:serenity-core:2.0.2",
            "net.serenity-bdd:serenity-junit:2.0.2",
            "net.serenity-bdd:serenity-screenplay-webdriver:2.0.2",
            "net.serenity-bdd:serenity-cucumber:1.9.7",
            "io.github.bonigarcia:webdrivermanager:2.2.1"
            
    )
}
//dependencies {
  //  testCompile group: 'junit', name: 'junit', version: '4.12'
//}

task PR(type:Test){
    List<String> runners=file('src/test/java/com/test/core').listFiles().collect{it.name}.findAll{it=~'launch'}.collect{it.take(it.lastIndexOf('.'))}
    maxParallelForks= System.properties.'serenity.fork.count' as Integer ?:4
    maxParallelForks= [maxParallelForks,runners.size()].min()
    maxParallelForks.times {"$runners[it]"}
    testLogging.showStandardStreams =true

}
test{
//    testLogging.showStandardStreams =true
}
